@model Kup1Gis.ViewModels.IndexViewModel
@{
    ViewData["Title"] = "Главная";
    var prefixProperty = "property_";
}

<!--Types of notifications-->
<div aria-live="polite" aria-atomic="true" class="">
    <div class="toast-container position-absolute bottom-0 end-0 p-3">
        <div id="SuccessNotify" class="toast align-items-center text-white bg-success border-0" role="alert"
             aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div id="SuccessToastText" class="toast-body">
                    Текст уведомления.
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"
                        aria-label="Закрыть"></button>
            </div>
        </div>

        <div id="DangerNotify" class="toast align-items-center text-white bg-danger border-0" role="alert"
             aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div id="DangerToastText" class="toast-body">
                    Текст уведомления.
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"
                        aria-label="Закрыть"></button>
            </div>
        </div>
    </div>
</div>

<!--Content-->
<div class="d-flex flex-grow-1">
    <div class="container-fluid d-flex">
        <div class="row flex-grow-1 d-flex align-items-stretch">
            <div class="col-3 bg-gray-500 overflow-auto" style="height: calc(100vh - var(--header-height))">
                <div id="upScroll1"></div>
                <form id="createPointForm" class="collapse card mt-2 p-2 text-start needs-validation" novalidate>
                    <div class="d-flex">
                        <div class="w-100 text-center">
                            <h5>Создать точку наблюдения</h5>
                        </div>
                        <div class="">
                            <button class="btn-close" type="button"
                                    data-bs-toggle="collapse" data-bs-target="#createPointForm"
                                    aria-expanded="False" aria-controls="createPointForm"></button>
                        </div>
                    </div>
                    <div class="text-start">
                        <div class="row g-2">
                            <div class="col-4">
                                <label for="kupId" class="form-label">Id</label>
                                <input name="Id" id="kupId" class="form-control" type="number" placeholder="№" required
                                       aria-describedby="idHelp"/>
                                <div class="invalid-feedback">
                                    Поле обязательно
                                </div>
                            </div>
                            <div class="col-8">
                                <label for="kupName" class="form-label">Название</label>
                                <input name="Name" id="kupName" class="form-control" type="text" placeholder="№ т.н."
                                       required/>
                                <div class="invalid-feedback">
                                    Поле обязательно
                                </div>
                            </div>
                        </div>
                        <div class="mt-3 form-floating">
                            <textarea name="GeographicalReference" id="kupGeographicalReference" class="form-control"
                                      placeholder="Географическая привязка"></textarea>
                            <label for="kupGeographicalReference">Географическая привязка</label>
                        </div>
                        <div class="row g-2 mt-2">
                            <div class="col-6 mt-0">
                                <label for="kupLatitude" class="form-label">Широта</label>
                                <input name="Coordinates.Latitude" id="kupLatitude" class="form-control" type="number"
                                       step="0.000001" placeholder="Широта" required lang="en"/>
                                <div class="invalid-feedback">
                                    Поле обязательно
                                </div>
                            </div>
                            <div class="col-6 mt-0">
                                <label for="kupLongitude" class="form-label">Долгота</label>
                                <input name="Coordinates.Longitude" id="kupLongitude" class="form-control" type="number"
                                       step="0.000001" placeholder="Долгота" required lang="en"/>
                                <div class="invalid-feedback">
                                    Поле обязательно
                                </div>
                            </div>
                        </div>
                        <div class="row g-2 mt-2">
                            <div class="col-6 mt-0 form-floating">
                                <input name="Coordinates.AbsMarkOfSea" id="kupAbsMarkOfSea" class="form-control"
                                       type="number" step="0.0001" placeholder="Абс. отм., м" lang="en"/>
                                <label for="kupAbsMarkOfSea" class="form-label">Абс. отм., м</label>
                            </div>
                            <div class="col-6 mt-0 form-floating">
                                <input name="Coordinates.Eksp" id="kupEksp" class="form-control" type="text"
                                       placeholder="Эксп.,°"/>
                                <label for="kupEksp" class="form-label">Эксп.,°</label>
                            </div>
                        </div>

                        @* <div id="imagesZone" class="mt-3"> *@
                        @*     <button type="button" class="btn btn-outline-success"> *@
                        @*         Добавить фото *@
                        @*     </button> *@
                        @*     <div class="card mt-2 p-2 gap-2"> *@
                        @*         <div class="row g-2"> *@
                        @*             <label class="col form-label">Новое фото</label> *@
                        @*             <div class="col text-end"> *@
                        @*                 <button type="button" class="btn-close"></button> *@
                        @*             </div> *@
                        @*         </div> *@
                        @*         <input type="file" required class="form-control btn-outline-success" accept="image/png, image/gif, image/jpeg"/> *@
                        @*         <input type="text" placeholder="Изменить название (по желанию)" class="form-control"/> *@
                        @*         <textarea placeholder="Описание" class="form-control"></textarea> *@
                        @*     </div> *@
                        @* </div> *@
                    </div>
                    <div class="mt-3">
                        <button id="createPointBtn" class="btn btn-primary" type="button">Создать</button>
                    </div>
                </form>
                <form id="editPointForm" class="collapse card mt-2 p-2 text-start needs-validation" novalidate>
                    <div class="d-flex">
                        <div class="w-100 text-center">
                            <h5 id="editKupTitle">Точка наблюдения</h5>
                        </div>
                        <div class="">
                            <button class="btn-close" type="button"
                                    data-bs-toggle="collapse" data-bs-target="#editPointForm"
                                    aria-expanded="False" aria-controls="editPointForm"></button>
                        </div>
                    </div>
                    <div class="text-start">
                        <div class="row g-2">
                            <div class="col-4">
                                <label for="editKupId" class="form-label">Id</label>
                                <input readonly name="Id" id="editKupId" class="form-control" type="number"
                                       placeholder="№" required aria-describedby="idHelp"/>
                                <div class="invalid-feedback">
                                    Поле обязательно
                                </div>
                            </div>
                            <div class="col-8">
                                <label for="editKupName" class="form-label">Название</label>
                                <input readonly name="Name" id="editKupName" class="form-control" type="text"
                                       placeholder="№ т.н."/>
                            </div>
                        </div>
                        <div class="mt-3 form-floating">
                            <textarea readonly name="GeographicalReference" id="editKupGeographicalReference"
                                      class="form-control" placeholder="Географическая привязка"></textarea>
                            <label for="editKupGeographicalReference">Географическая привязка</label>
                        </div>
                        <div class="row g-2 mt-2">
                            <div class="col-6 mt-0">
                                <label for="editKupLatitude" class="form-label">Широта</label>
                                <input readonly name="Coordinates.Latitude" id="editKupLatitude" class="form-control"
                                       type="number" step="0.000001" placeholder="Широта"/>
                            </div>
                            <div class="col-6 mt-0">
                                <label for="editKupLongitude" class="form-label">Долгота</label>
                                <input readonly name="Coordinates.Longitude" id="editKupLongitude" class="form-control"
                                       type="number" step="0.000001" placeholder="Долгота"/>
                            </div>
                        </div>
                        <div class="row g-2 mt-2">
                            <div class="col-6 mt-0 form-floating">
                                <input readonly name="Coordinates.AbsMarkOfSea" id="editKupAbsMarkOfSea"
                                       class="form-control" type="number" step="0.0001" placeholder="Абс. отм., м"/>
                                <label for="editKupAbsMarkOfSea" class="form-label">Абс. отм., м</label>
                            </div>
                            <div class="col-6 mt-0 form-floating">
                                <input readonly name="Coordinates.Eksp" id="editKupEksp" class="form-control"
                                       type="text" placeholder="Эксп.,°"/>
                                <label for="editKupEksp" class="form-label">Эксп.,°</label>
                            </div>
                        </div>
                        <div id="observationsContainer">
                            
                        </div>
                    </div>
                </form>
                <div class="card mt-2 p-2">
                    <h5 class="text-center">Точки наблюдения</h5>
                    <div class="d-flex justify-content-center">
                        <button id="kupListOrderButton" class="btn btn-success btn-sm" type="button">↑↓</button>
                    </div>
                    <div class="kupList">
                        <table id="kupListTable" class="table align-middle">
                            <thead>
                            <tr>
                                <th scope="col">#</th>
                                <th scope="col">Название</th>
                                <th scope="col">Широта</th>
                                <th scope="col">Долгота</th>
                            </tr>
                            </thead>
                            <tbody class="gap-1" id="kupListRows">
                            @foreach (var kup in Model.AllKups)
                            {
                                <tr>
                                    <td>@kup.Id</td>
                                    <td>
                                        <button class="btn btn-outline-primary" onclick="getKupFromTable(@kup.Id)">
                                            @kup.Name
                                        </button>
                                    </td>
                                    <td>@kup.Coordinates.Longitude</td>
                                    <td>@kup.Coordinates.Latitude</td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div id="map" class="col-7 d-flex flex-grow-1 p-0">
            </div>
            <div class="col-2 bg-gray-500 overflow-auto" style="height: calc(100vh - var(--header-height))">
                <div class="card mt-2 p-2 text-center">
                    <h5>Точки наблюдения</h5>
                    <form class="d-grid" id="loadExcelForm" enctype="multipart/form-data">
                        <button type="button" class="btn btn-success" data-bs-toggle="collapse"
                                data-bs-target=".multi-collapse"
                                aria-expanded="false"
                                aria-controls="collapseInputExcelButton collapseInputExcelSymbol1 collapseInputExcelSymbol2">
                            <span class="collapse multi-collapse" id="collapseInputExcelSymbol1">▼</span>
                            Импорт (Excel)
                            <span class="collapse multi-collapse" id="collapseInputExcelSymbol2">▼</span>
                        </button>
                        <div class="mx-2 collapse multi-collapse" id="collapseInputExcelButton">
                            <input id="excelFile" name="excelFile" class="form-control mt-2 btn-outline-success"
                                   type="file" required
                                   accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel"/>
                            <button id="loadExcelButton" type="button" class="form-control btn btn-success mt-2">
                                Загрузить
                            </button>
                        </div>
                    </form>
                    <button type="button" class="btn btn-outline-primary mt-2"
                            data-bs-toggle="collapse" data-bs-target="#createPointForm"
                            aria-expanded="False" aria-controls="createPointForm">
                        Создать
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    async function getKupFromTable(id) {
        let kupResponse = await fetch(`/Kup/GetKup/${id}`);
        console.log(kupResponse);
        if (!kupResponse.ok) return;
        let kup = await kupResponse.json();
        console.log(kup);
        document.getElementById("editKupId").value = kup.id;
        document.getElementById("editKupName").value = kup.name;
        document.getElementById("editKupGeographicalReference").value = kup.geographicalReference;
        document.getElementById("editKupLatitude").value = kup.coordinates.latitude;
        document.getElementById("editKupLongitude").value = kup.coordinates.longitude;
        document.getElementById("editKupAbsMarkOfSea").value = kup.coordinates.absMarkOfSea;
        document.getElementById("editKupEksp").value = kup.coordinates.eksp;

        let observationContainer = document.getElementById("observationsContainer");
        observationContainer.innerHTML = "";
        for (let i = 0; i < kup.observations.length; i++){
            let newObservation = document.createElement("div");
            newObservation.id = `editObservation${i}`;
            newObservation.innerHTML = `
                    <button type="button" class="btn btn-outline-primary mt-3"
                            data-bs-toggle="collapse" data-bs-target=".observable-collapse${i}"
                            aria-expanded="false" aria-controls="collapseInputObservableSymbol${i} collapseObservable${i}">
                        Наблюдение ${i + 1}
                        <span class="collapse observable-collapse${i}" id="collapseInputObservableSymbol${i}">▼</span>
                    </button>
                    <div class="collapse observable-collapse${i}" id="collapseObservable${i}">
                    </div>`;
            observationContainer.appendChild(newObservation);
            let propertyContainer = document.getElementById(`collapseObservable${i}`);
            for (let j = 0; j < kup.observations[i].properties.length; j++){
                let newProperty = document.createElement("div");
                newProperty.innerHTML = `
                    <div class="mt-3">
                        <label for="${i}id${kup.observations[i].properties[j].Name}">${kup.observations[i].properties[j].name}</label>
                        <textarea readonly name="${kup.observations[i].properties[j].name}" id="${i}id${kup.observations[i].properties[j].name}" class="form-control"
                                     >${kup?.observations[i]?.properties[j]?.value ?? ""}</textarea>
                    </div>`;
                propertyContainer.appendChild(newProperty);
            }
        }

        let form = document.getElementById("editPointForm");
        if (!form.classList.contains("show")) {
            form.classList.add("show");
        }

        document.getElementById("upScroll1").scrollIntoView({behavior: "smooth"});
    }

    window.onload = function () {
        let kupPoints = @Html.Raw(Json.Serialize(Model.AllKups));
        console.log(kupPoints[0]);
        const latitude = kupPoints[0].coordinates.latitude ?? 0;
        const longitude = kupPoints[0].coordinates.longitude ?? 0;
        console.log(latitude);
        console.log(longitude);
        const map = new maplibregl.Map({
            style: 'https://tiles.openfreemap.org/styles/bright',
            center: [longitude, latitude],
            zoom: 9.5,
            container: 'map',
        })

        map.addControl(new maplibregl.NavigationControl());

        kupPoints.forEach(kup => {
            try {
                let marker = new maplibregl.Marker()
                    .setLngLat([kup.coordinates.longitude, kup.coordinates.latitude])
                    .addTo(map);

                let popup = new maplibregl.Popup({offset: 10})
                    .setHTML(`
<div class="popup-content">
    <b>${kup.name}</b><br>
    ${kup.geographicalReference}<br>
    Координаты: ${kup.coordinates.latitude}, ${kup.coordinates.longitude}
  </div>
`);

                marker.setPopup(popup);
            }
            catch (e){
                console.error(e);
            }
        });
    };

    document.getElementById("kupListOrderButton").addEventListener("click", function () {
        let table = document.getElementById("kupListRows");
        let rows = Array.from(table.rows);
        rows.reverse();
        rows.forEach(row => table.appendChild(row));
    });

    document.getElementById("loadExcelButton").addEventListener("click", async function () {
        let form = document.getElementById("loadExcelForm");
        let data = new FormData(form);

        let result = await sendExcelFile(data);
        let responseText = await result.text();
        console.log(result.status + '\n' + result.statusText + '\n' + responseText);

        if (result.ok) {
            sendNotify("Файл загружен: " + responseText);
        } else {
            sendNotify("Ошибка загрузки файла: " + responseText);
        }
    })

    document.getElementById("createPointBtn").addEventListener("click", async function () {
        let form = document.getElementById("createPointForm");

        if (form.checkValidity()) {
            let data = new FormData(form);
            for (let pair in data.entries().map(x => x)) {
                if (pair[0].startsWith(@prefixProperty)) {
                    let property = {
                        PropertyName: pair[0].slice(@prefixProperty.Length),
                        PropertyValue: pair[1].trim()
                    };
                    data.delete(pair[0]);
                    data.append(property.PropertyValue, property.PropertyValue);
                } else {
                    data.set(pair[0], pair[1].trim());
                }
            }
            let response = await sendNewKup(data);
            let responseText = await response.text();
            console.log(response.status + '\n' + response.statusText + '\n' + responseText);
            if (response.ok) {
                sendNotify("Наблюдение добавлено!");
                await getKupFromTable(data.get("Id"));
            } else {
                sendNotify(response.status + '\n' + response.statusText, true);
            }
        } else {
            sendNotify('Заполните обязательные поля!', true);
        }

        form.classList.add("was-validated");
    });

    async function sendNewKup(kup) {
        return await fetch("/Kup/AddKup", {
            method: "POST",
            body: kup
        });
    }

    async function sendExcelFile(excel) {
        return await fetch("/Kup/ImportExcel/", {
            method: "POST",
            body: excel
        });
    }

    function sendNotify(text, error = false) {
        document.getElementById(error ? 'DangerToastText' : 'SuccessToastText')
            .textContent = text ?? "Здесь должен был быть текст.";
        let toastBase = document.getElementById(error ? 'DangerNotify' : 'SuccessNotify');
        let toast = new bootstrap.Toast(toastBase);
        toast.show()
    }
</script>